#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
test-api-project - AI Project
API test projesi

Auto-generated by AI Master System (Secure Version)
"""

import os
import logging
from transformers import pipeline
from flask import Flask, request, jsonify

# Logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class Test_Api_ProjectAI:
    def __init__(self):
        logger.info("ü§ñ test-api-project AI ba≈ülatƒ±lƒ±yor...")
        self.model = None
        self.load_model()
    
    def load_model(self):
        """AI modelini y√ºkle"""
        try:
            # G√ºvenli model y√ºkleme
            model_name = os.getenv('MODEL_NAME', 'microsoft/DialoGPT-medium')
            self.model = pipeline("text-generation", model=model_name)
            logger.info("‚úÖ Model y√ºklendi")
        except Exception as e:
            logger.error(f"‚ùå Model y√ºkleme hatasƒ±: {e}")
    
    def process(self, input_text: str) -> str:
        """Metni i≈üle"""
        if not self.model:
            return "Model y√ºklenmedi"
        
        try:
            result = self.model(input_text, max_length=100, do_sample=True)
            return result[0]['generated_text']
        except Exception as e:
            return f"Hata: {e}"

# Flask API
app = Flask(__name__)
ai_system = Test_Api_ProjectAI()

@app.route('/api/process', methods=['POST'])
def api_process():
    data = request.json
    text = data.get('text', '')
    result = ai_system.process(text)
    return jsonify({'result': result})

@app.route('/api/health')
def health_check():
    return jsonify({'status': 'healthy', 'model_loaded': ai_system.model is not None})

@app.route('/')
def index():
    return f"""
    <h1>test-api-project</h1>
    <p>API test projesi</p>
    <h2>API Endpoints:</h2>
    <ul>
        <li>POST /api/process - Metin i≈üleme</li>
        <li>GET /api/health - Sistem durumu</li>
    </ul>
    """

if __name__ == "__main__":
    port = int(os.getenv('PORT', 5000))
    app.run(debug=False, host='0.0.0.0', port=port)
